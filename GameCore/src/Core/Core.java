package Core;

import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import Server.Server;

public class Core {

	//Specific PlayerNo for map design
	private static ArrayList<Integer> playersNo = new ArrayList<>();
	private static ArrayList<String> playersName = new ArrayList<>();
	
	private static Server server;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Map Design
				int[][] map = {{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2},
						{2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2,2,3,4,1,2},
						{1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3,1,2,3,4,3},
						{2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4,2,1,0,1,4},
						{3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1,3,4,3,2,1},
						{4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2,4,1,4,3,2}};
				
				//First Time
				long time =(long)(new Date().getTime()/10);
				System.out.println(time);
				
				//Marketplace
				ArrayList<HashMap<Integer,int[]>> marketplace = new ArrayList<HashMap<Integer,int[]>>();
				for(int i = 0; i < 17 ; i++){//0wood,1stone,2iron,3clay,4ranch,5crop,6metal,7silver
					//8silk,9rudstone,10lumber,11cement,12powder,13rope,14shaft,15Zn,16leather
					marketplace.add(new HashMap<Integer,int[]>());
				}
				
				//Player specific name for thread
				Map<String,Player> players = new HashMap<String, Player>();
				Map<Integer,String> p_name = new  HashMap<Integer, String>();
				WarSimulator ws = new WarSimulator(players);
				ws.start();
				Exit exit = new Exit();
				exit.start();

				AllianceRun allianceRun = new AllianceRun(map,players,p_name);
				server= new Server(playersNo, playersName,players,map,p_name,ws,marketplace,allianceRun);
				server.Server();
				
	}

}
